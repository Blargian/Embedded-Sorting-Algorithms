/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    bg.setPosition(0, 0, 480, 272);
    bg.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(bg);

    button_select_algo.setXY(397, 50);
    button_select_algo.setBitmaps(touchgfx::Bitmap(BITMAP_ALGORITHM_ID), touchgfx::Bitmap(BITMAP_ALGORITHM_ID));
    button_select_algo.setAction(buttonCallback);
    add(button_select_algo);

    button_randomize.setXY(397, 159);
    button_randomize.setBitmaps(touchgfx::Bitmap(BITMAP_RANDOM_ID), touchgfx::Bitmap(BITMAP_RANDOM_ID));
    button_randomize.setAction(buttonCallback);
    add(button_randomize);

    histogram.setPosition(21, 11, 356, 226);
    histogram.setScaleX(1);
    histogram.setScaleY(1);
    histogram.setGraphAreaMargin(0, 0, 0, 0);
    histogram.setGraphAreaPadding(0, 0, 0, 0);
    histogram.setGraphRangeX(0, 256);
    histogram.setGraphRangeY(0, 256);
    histogramHistogram1.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    histogramHistogram1.setBarWidth(1);
    histogramHistogram1.setBaseline(0);
    histogram.addGraphElement(histogramHistogram1);


    add(histogram);

    line1.setPosition(21, 237, 356, 35);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(5, 10);
    line1.setEnd(350, 10);
    line1.setLineWidth(10);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);
}

MainViewBase::~MainViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button_select_algo)
    {
        //interaction_navigate_to_select
        //When button_select_algo clicked change screen to Selector
        //Go to Selector with screen transition towards East
        application().gotoSelectorScreenSlideTransitionEast();
    }
    if (&src == &button_randomize)
    {
        //Interaction_randomize
        //When button_randomize clicked call virtual function
        //Call randomizeGraph
        randomizeGraph();
    }
}
